Configuration file for the Planetlab deployment

To log into planetlab:
>ssh -l diku_INF5510 -i .ssh/id_planetlab  planetlab1.sics.se
There are two projects deployd, Shredhub-jsp and Shredhub-backbone.

WORK PROCESS
1.log into planetlab
2.Start mongo and postgres
2.Go into all three maven projects and do:
3.> git pull
4.> mvn clean package/install
5.> Stop tomcat 
6. remove the old warfile from tomcat webapps folder, and cp the new war file into the tomcat web apps folder
7.> Start tomcat
8. each time you want add code stuff locally, push the code to git and redo the process above 

If you need to copy files to planetlab:
> scp <filename> diku_INF5510@planetlab1.sics.se:~/master/


STATUS
In this section I will outline the remaining tasks for the project.
As for now, both projects are deployd and works some-what ok. 
However, the deployments are not so efficient. Hence the remaining tasks
should concern fine tuning the projects.

Possible Todo's:
 - Go through the source code and further simplify the Java code (for Shredhub-JSP)

 - Replicate the database. But this is lol, beacuse it requires a lot of work for the 
PostgreSQL instance. PostgreSQL 9.* has support for streaming replication, but still. Lot of work.
 




PROJECTS:

1.Shredhub-backbone
  
  Database:
  Shredhub-backbone uses Mongodb 2.2.0. The database is named shredhub
  
  Database population:
    1000 Shredders
    61000 Shreds    




2.Shredhub-jsp

  Database:
  Shredhub-jsp uses Postgres 8.4.6. Name of the database is shredhub.
  
  Database population:
    1000 Shredders
    61000 Shreds

  To administrate the db log into to the postgresuser:
  >sudo su postgres
  Run psql:
  >psql -d shredhub -U postgres





